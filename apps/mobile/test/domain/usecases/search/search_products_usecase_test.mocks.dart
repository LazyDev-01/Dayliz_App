// Mocks generated by Mockito 5.4.5 from annotations
// in dayliz_app/test/domain/usecases/search/search_products_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dayliz_app/core/errors/failures.dart' as _i5;
import 'package:dayliz_app/core/models/pagination_models.dart' as _i6;
import 'package:dayliz_app/domain/entities/product.dart' as _i7;
import 'package:dayliz_app/domain/repositories/product_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepository extends _i1.Mock implements _i3.ProductRepository {
  MockProductRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PaginatedResponse<_i7.Product>>>
      getProductsPaginated({
    _i6.PaginationParams? pagination,
    String? categoryId,
    String? subcategoryId,
    String? searchQuery,
    String? sortBy,
    bool? ascending,
    double? minPrice,
    double? maxPrice,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getProductsPaginated,
              [],
              {
                #pagination: pagination,
                #categoryId: categoryId,
                #subcategoryId: subcategoryId,
                #searchQuery: searchQuery,
                #sortBy: sortBy,
                #ascending: ascending,
                #minPrice: minPrice,
                #maxPrice: maxPrice,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        _i6.PaginatedResponse<_i7.Product>>>.value(
                _FakeEither_0<_i5.Failure, _i6.PaginatedResponse<_i7.Product>>(
              this,
              Invocation.method(
                #getProductsPaginated,
                [],
                {
                  #pagination: pagination,
                  #categoryId: categoryId,
                  #subcategoryId: subcategoryId,
                  #searchQuery: searchQuery,
                  #sortBy: sortBy,
                  #ascending: ascending,
                  #minPrice: minPrice,
                  #maxPrice: maxPrice,
                },
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, _i6.PaginatedResponse<_i7.Product>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>> getProducts({
    int? page,
    int? limit,
    String? categoryId,
    String? subcategoryId,
    String? searchQuery,
    String? sortBy,
    bool? ascending,
    double? minPrice,
    double? maxPrice,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
          {
            #page: page,
            #limit: limit,
            #categoryId: categoryId,
            #subcategoryId: subcategoryId,
            #searchQuery: searchQuery,
            #sortBy: sortBy,
            #ascending: ascending,
            #minPrice: minPrice,
            #maxPrice: maxPrice,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Product>>(
          this,
          Invocation.method(
            #getProducts,
            [],
            {
              #page: page,
              #limit: limit,
              #categoryId: categoryId,
              #subcategoryId: subcategoryId,
              #searchQuery: searchQuery,
              #sortBy: sortBy,
              #ascending: ascending,
              #minPrice: minPrice,
              #maxPrice: maxPrice,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.Product>> getProductById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.Product>>.value(
            _FakeEither_0<_i5.Failure, _i7.Product>(
          this,
          Invocation.method(
            #getProductById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.Product>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>> getFeaturedProducts(
          {int? limit}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFeaturedProducts,
          [],
          {#limit: limit},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Product>>(
          this,
          Invocation.method(
            #getFeaturedProducts,
            [],
            {#limit: limit},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>> getProductsOnSale({
    int? page,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsOnSale,
          [],
          {
            #page: page,
            #limit: limit,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Product>>(
          this,
          Invocation.method(
            #getProductsOnSale,
            [],
            {
              #page: page,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>> getRelatedProducts({
    required String? productId,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRelatedProducts,
          [],
          {
            #productId: productId,
            #limit: limit,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Product>>(
          this,
          Invocation.method(
            #getRelatedProducts,
            [],
            {
              #productId: productId,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>> searchProducts({
    required String? query,
    int? page,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchProducts,
          [],
          {
            #query: query,
            #page: page,
            #limit: limit,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Product>>(
          this,
          Invocation.method(
            #searchProducts,
            [],
            {
              #query: query,
              #page: page,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>> searchProductsScoped({
    required String? query,
    String? subcategoryId,
    String? categoryId,
    int? page,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchProductsScoped,
          [],
          {
            #query: query,
            #subcategoryId: subcategoryId,
            #categoryId: categoryId,
            #page: page,
            #limit: limit,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Product>>(
          this,
          Invocation.method(
            #searchProductsScoped,
            [],
            {
              #query: query,
              #subcategoryId: subcategoryId,
              #categoryId: categoryId,
              #page: page,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>> getProductsByCategory(
          String? categoryId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByCategory,
          [categoryId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Product>>(
          this,
          Invocation.method(
            #getProductsByCategory,
            [categoryId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>> getProductsByIds(
          List<String>? ids) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByIds,
          [ids],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Product>>(
          this,
          Invocation.method(
            #getProductsByIds,
            [ids],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Product>>>);
}
