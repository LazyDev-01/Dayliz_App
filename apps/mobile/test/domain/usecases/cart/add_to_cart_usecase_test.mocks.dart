// Mocks generated by Mockito 5.4.5 from annotations
// in dayliz_app/test/domain/usecases/cart/add_to_cart_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dayliz_app/core/errors/failures.dart' as _i5;
import 'package:dayliz_app/domain/entities/cart_item.dart' as _i6;
import 'package:dayliz_app/domain/entities/product.dart' as _i7;
import 'package:dayliz_app/domain/repositories/cart_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartRepository extends _i1.Mock implements _i3.CartRepository {
  MockCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.CartItem>>> getCartItems() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCartItems,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.CartItem>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.CartItem>>(
          this,
          Invocation.method(
            #getCartItems,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.CartItem>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CartItem>> addToCart({
    required _i7.Product? product,
    required int? quantity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToCart,
          [],
          {
            #product: product,
            #quantity: quantity,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.CartItem>>.value(
            _FakeEither_0<_i5.Failure, _i6.CartItem>(
          this,
          Invocation.method(
            #addToCart,
            [],
            {
              #product: product,
              #quantity: quantity,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CartItem>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> removeFromCart(
          {required String? cartItemId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromCart,
          [],
          {#cartItemId: cartItemId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #removeFromCart,
            [],
            {#cartItemId: cartItemId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CartItem>> updateQuantity({
    required String? cartItemId,
    required int? quantity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateQuantity,
          [],
          {
            #cartItemId: cartItemId,
            #quantity: quantity,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.CartItem>>.value(
            _FakeEither_0<_i5.Failure, _i6.CartItem>(
          this,
          Invocation.method(
            #updateQuantity,
            [],
            {
              #cartItemId: cartItemId,
              #quantity: quantity,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CartItem>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> clearCart() => (super.noSuchMethod(
        Invocation.method(
          #clearCart,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #clearCart,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, double>> getTotalPrice() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalPrice,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, double>>.value(
            _FakeEither_0<_i5.Failure, double>(
          this,
          Invocation.method(
            #getTotalPrice,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, double>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> getItemCount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getItemCount,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #getItemCount,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> isInCart(
          {required String? productId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #isInCart,
          [],
          {#productId: productId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #isInCart,
            [],
            {#productId: productId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> syncCartWithDatabase() =>
      (super.noSuchMethod(
        Invocation.method(
          #syncCartWithDatabase,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #syncCartWithDatabase,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> migrateGuestCartToUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #migrateGuestCartToUser,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #migrateGuestCartToUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}
