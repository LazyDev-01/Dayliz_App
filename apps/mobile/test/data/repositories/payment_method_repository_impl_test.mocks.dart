// Mocks generated by Mockito 5.4.5 from annotations
// in dayliz_app/test/data/repositories/payment_method_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dayliz_app/core/network/network_info.dart' as _i6;
import 'package:dayliz_app/data/datasources/payment_method_local_data_source.dart'
    as _i5;
import 'package:dayliz_app/data/datasources/payment_method_remote_data_source.dart'
    as _i3;
import 'package:dayliz_app/data/models/payment_method_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePaymentMethodModel_0 extends _i1.SmartFake
    implements _i2.PaymentMethodModel {
  _FakePaymentMethodModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PaymentMethodRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentMethodRemoteDataSource extends _i1.Mock
    implements _i3.PaymentMethodRemoteDataSource {
  MockPaymentMethodRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.PaymentMethodModel>> getPaymentMethods(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentMethods,
          [userId],
        ),
        returnValue: _i4.Future<List<_i2.PaymentMethodModel>>.value(
            <_i2.PaymentMethodModel>[]),
      ) as _i4.Future<List<_i2.PaymentMethodModel>>);

  @override
  _i4.Future<_i2.PaymentMethodModel> getPaymentMethod(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentMethod,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.PaymentMethodModel>.value(_FakePaymentMethodModel_0(
          this,
          Invocation.method(
            #getPaymentMethod,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.PaymentMethodModel>);

  @override
  _i4.Future<_i2.PaymentMethodModel?> getDefaultPaymentMethod(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDefaultPaymentMethod,
          [userId],
        ),
        returnValue: _i4.Future<_i2.PaymentMethodModel?>.value(),
      ) as _i4.Future<_i2.PaymentMethodModel?>);

  @override
  _i4.Future<_i2.PaymentMethodModel> addPaymentMethod(
          _i2.PaymentMethodModel? paymentMethod) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPaymentMethod,
          [paymentMethod],
        ),
        returnValue:
            _i4.Future<_i2.PaymentMethodModel>.value(_FakePaymentMethodModel_0(
          this,
          Invocation.method(
            #addPaymentMethod,
            [paymentMethod],
          ),
        )),
      ) as _i4.Future<_i2.PaymentMethodModel>);

  @override
  _i4.Future<_i2.PaymentMethodModel> updatePaymentMethod(
          _i2.PaymentMethodModel? paymentMethod) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePaymentMethod,
          [paymentMethod],
        ),
        returnValue:
            _i4.Future<_i2.PaymentMethodModel>.value(_FakePaymentMethodModel_0(
          this,
          Invocation.method(
            #updatePaymentMethod,
            [paymentMethod],
          ),
        )),
      ) as _i4.Future<_i2.PaymentMethodModel>);

  @override
  _i4.Future<bool> deletePaymentMethod(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deletePaymentMethod,
          [id],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.PaymentMethodModel> setDefaultPaymentMethod(
    String? id,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDefaultPaymentMethod,
          [
            id,
            userId,
          ],
        ),
        returnValue:
            _i4.Future<_i2.PaymentMethodModel>.value(_FakePaymentMethodModel_0(
          this,
          Invocation.method(
            #setDefaultPaymentMethod,
            [
              id,
              userId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.PaymentMethodModel>);
}

/// A class which mocks [PaymentMethodLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentMethodLocalDataSource extends _i1.Mock
    implements _i5.PaymentMethodLocalDataSource {
  MockPaymentMethodLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.PaymentMethodModel>> getPaymentMethods(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentMethods,
          [userId],
        ),
        returnValue: _i4.Future<List<_i2.PaymentMethodModel>>.value(
            <_i2.PaymentMethodModel>[]),
      ) as _i4.Future<List<_i2.PaymentMethodModel>>);

  @override
  _i4.Future<_i2.PaymentMethodModel> getPaymentMethod(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentMethod,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.PaymentMethodModel>.value(_FakePaymentMethodModel_0(
          this,
          Invocation.method(
            #getPaymentMethod,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.PaymentMethodModel>);

  @override
  _i4.Future<_i2.PaymentMethodModel> getDefaultPaymentMethod(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDefaultPaymentMethod,
          [userId],
        ),
        returnValue:
            _i4.Future<_i2.PaymentMethodModel>.value(_FakePaymentMethodModel_0(
          this,
          Invocation.method(
            #getDefaultPaymentMethod,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.PaymentMethodModel>);

  @override
  _i4.Future<void> cachePaymentMethods(
    String? userId,
    List<_i2.PaymentMethodModel>? paymentMethods,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cachePaymentMethods,
          [
            userId,
            paymentMethods,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> cachePaymentMethod(_i2.PaymentMethodModel? paymentMethod) =>
      (super.noSuchMethod(
        Invocation.method(
          #cachePaymentMethod,
          [paymentMethod],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removePaymentMethod(String? id) => (super.noSuchMethod(
        Invocation.method(
          #removePaymentMethod,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
